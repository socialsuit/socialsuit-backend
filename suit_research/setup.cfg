[metadata]
name = social-suit-research
version = 1.0.0
description = Social media and funding research platform
author = Social Suit Team
author_email = team@socialsuit.com
url = https://github.com/socialsuit/suit_research
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12

[options]
packages = find:
python_requires = >=3.10
include_package_data = True
zip_safe = False

[options.packages.find]
where = .
include = app*
exclude = tests*

# Flake8 Configuration
[flake8]
max-line-length = 88
extend-ignore = 
    E203,  # whitespace before ':'
    W503,  # line break before binary operator
    E501,  # line too long (handled by black)
    F401,  # imported but unused (handled by isort)
    E402,  # module level import not at top of file
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    .tox,
    .venv,
    venv,
    build,
    dist,
    *.egg-info,
    alembic/versions,
    migrations
per-file-ignores =
    __init__.py:F401
    tests/*:S101,S106,S311,D
    conftest.py:S101
max-complexity = 10
docstring-convention = google

# MyPy Configuration
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
ignore_missing_imports = True
no_strict_optional = True

[mypy-tests.*]
ignore_errors = True

[mypy-alembic.*]
ignore_errors = True

# Coverage Configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */alembic/*
    */venv/*
    */.venv/*
    */conftest.py
    */setup.py
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
ignore_errors = True
show_missing = True
skip_covered = False
fail_under = 80
precision = 2

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Tool Configuration
[tool:pytest]
minversion = 7.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
testpaths = tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    crawler: marks tests as crawler tests
    parser: marks tests as parser tests
    enrichment: marks tests as enrichment tests
    database: marks tests as database tests
    external_api: marks tests that call external APIs
    performance: marks tests as performance tests
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Bandit Security Configuration
[bandit]
exclude_dirs = tests,migrations,alembic
skips = B101,B601

# isort Configuration
[isort]
profile = black
line_length = 88
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
known_first_party = app
known_third_party = 
    fastapi,
    sqlalchemy,
    pydantic,
    alembic,
    pytest,
    httpx,
    redis,
    celery,
    requests,
    beautifulsoup4,
    pandas,
    numpy
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
default_section = THIRDPARTY