version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sparkr
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  sparkr-backend:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/sparkr
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=true
      - HOST=0.0.0.0
      - PORT=8000
      - SECRET_KEY=development_secret_key
    volumes:
      - .:/app

  celery-worker:
    build: .
    command: celery -A app.workers.tasks_worker.celery_app worker --loglevel=info
    depends_on:
      - redis
      - sparkr-backend
    environment:
      - DB_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/sparkr
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app

volumes:
  postgres_data:
  redis_data: