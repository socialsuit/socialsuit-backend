name: Social Suit CI

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'social-suit/**'
      - '.github/workflows/social-suit-ci.yml'
  pull_request:
    branches: [ main, master, develop ]
    paths:
      - 'social-suit/**'
      - '.github/workflows/social-suit-ci.yml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./social-suit
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint with flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      
      - name: Check formatting with black
        run: black --check .
      
      - name: Check imports with isort
        run: isort --check-only --profile black .

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./social-suit
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: social_suit_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run migrations
        run: python scripts/run_migrations.py
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: social_suit_test
      
      - name: Test with pytest
        run: pytest --cov=app --cov-report=xml
        env:
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: social_suit_test
          REDIS_HOST: localhost
          REDIS_PORT: 6379
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: social-suit-coverage-report
          path: ./social-suit/coverage.xml
      
      - name: Generate OpenAPI spec
        run: |
          mkdir -p docs/openapi
          if [ ! -f docs/openapi/openapi.json ]; then
            python scripts/generate_openapi.py
          fi
      
      - name: Upload OpenAPI spec
        uses: actions/upload-artifact@v3
        with:
          name: social-suit-openapi-spec
          path: ./social-suit/docs/openapi/openapi.json

  build:
    name: Build Docker Image
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./social-suit
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and export
        uses: docker/build-push-action@v4
        with:
          context: ./social-suit
          push: false
          load: true
          tags: social-suit:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test image
        run: |
          docker run --rm social-suit:${{ github.sha }} --version
      
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Push to Docker Hub
        if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: docker/build-push-action@v4
        with:
          context: ./social-suit
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/social-suit:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/social-suit:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max